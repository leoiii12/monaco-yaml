{"version":3,"sources":["yamlMode.ts"],"names":[],"mappings":"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","file":"yamlMode.js","sourceRoot":"..\\src","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\nimport * as languageFeatures from './languageFeatures';\r\nimport { LanguageServiceDefaultsImpl } from './monaco.contribution';\r\nimport { WorkerManager } from './workerManager';\r\nimport { YAMLWorker } from './yamlWorker';\r\n\r\nimport Uri = monaco.Uri;\r\nimport IDisposable = monaco.IDisposable;\r\n\r\nexport function setupMode(defaults: LanguageServiceDefaultsImpl): void {\r\n  const disposables: IDisposable[] = [];\r\n\r\n  const client = new WorkerManager(defaults);\r\n  disposables.push(client);\r\n\r\n  const worker: languageFeatures.WorkerAccessor = (\r\n    ...uris: Uri[]\r\n  ): Promise<YAMLWorker> => {\r\n    return Promise.resolve(client.getLanguageServiceWorker(...uris));\r\n  };\r\n\r\n  const languageId = defaults.languageId;\r\n\r\n  disposables.push(\r\n    monaco.languages.registerCompletionItemProvider(\r\n      languageId,\r\n      new languageFeatures.CompletionAdapter(worker)\r\n    )\r\n  );\r\n  disposables.push(\r\n    monaco.languages.registerHoverProvider(\r\n      languageId,\r\n      new languageFeatures.HoverAdapter(worker)\r\n    )\r\n  );\r\n  disposables.push(\r\n    monaco.languages.registerDocumentSymbolProvider(\r\n      languageId,\r\n      new languageFeatures.DocumentSymbolAdapter(worker)\r\n    )\r\n  );\r\n  disposables.push(\r\n    monaco.languages.registerDocumentFormattingEditProvider(\r\n      languageId,\r\n      new languageFeatures.DocumentFormattingEditProvider(worker)\r\n    )\r\n  );\r\n  disposables.push(\r\n    monaco.languages.registerDocumentRangeFormattingEditProvider(\r\n      languageId,\r\n      new languageFeatures.DocumentRangeFormattingEditProvider(worker)\r\n    )\r\n  );\r\n  disposables.push(\r\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults)\r\n  );\r\n  disposables.push(\r\n    monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration)\r\n  );\r\n\r\n  // Color adapter should be necessary most of the time:\r\n  // disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\r\n}\r\n\r\nconst richEditConfiguration: monaco.languages.LanguageConfiguration = {\r\n  comments: {\r\n    lineComment: '#',\r\n  },\r\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n  autoClosingPairs: [\r\n    { open: '{', close: '}' },\r\n    { open: '[', close: ']' },\r\n    { open: '(', close: ')' },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n  ],\r\n  surroundingPairs: [\r\n    { open: '{', close: '}' },\r\n    { open: '[', close: ']' },\r\n    { open: '(', close: ')' },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n  ],\r\n\r\n  onEnterRules: [\r\n    {\r\n      beforeText: /:\\s*$/,\r\n      action: { indentAction: monaco.languages.IndentAction.Indent },\r\n    },\r\n  ],\r\n};\r\n"]}